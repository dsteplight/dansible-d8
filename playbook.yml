---
- hosts: all
  become: yes

  vars_files:
  - vars.yml

  tasks:
#  - name: Ensure NTP (for time sychronization) is installed.
#    yum: name=ntp state-present
#  - name: Ensure NTP is running.
#    service: name=ntpd state=started enabled=yes

  - name: install packages
    apt: name={{ item }} update_cache=yes state=latest
    with_items:
      - git
      - mcrypt
      - nginx
      - php5.6-cli
      - php5.6-curl
      - php5.6-fpm
      - php5.6-intl
      - php5.6-json
      - php5.6-mcrypt
      - php5.6-xml
      - sqlite3
      - mysql-server
      - libapache2-mod-auth-mysql
      - php5.6-mysql
      - python-mysqldb
      - apache2

  - name: Download PHPUnit
    become: yes
    become_user: vagrant
    become_method: sudo
    get_url:
      url: https://phar.phpunit.de/phpunit.phar
      dest: /tmp/phpunit.phar
      mode: 0755

#  - name:    Add executable permissions to PHPUnit
#    become: yes
#    become_user: vagrant
#    become_method: sudo
#    command: chmod +x /tmp/phpunit.phar

  - name:    Move PHPunit to /usr/local/bin
    command: mv /tmp/phpunit.phar /usr/local/bin/phpunit

      
  - name: Remove test DB
    mysql_db:
      db: test
      state: absent

  - name: Create a new database with name {{ db_name }}
    mysql_db:
      name: "{{ db_name }}"
      state: present

  - name: creating an user with admin priviledges
    mysql_user:
      name: "{{ db_user }}"
      password: "{{db_password}}"
      priv: "{{ db_priv }}"
      host: "{{ db_host }}"
      state: present


  - name: create /var/www/ directory
    file: dest=/var/www/ state=directory owner=www-data group=www-data mode=0700


  - name: Download Composer Installer
    get_url: 
      url: https://getcomposer.org/installer
      dest: /tmp/composer-install.php
      mode: 0777

  - name: Run Composers Installer
    command: > 
      php /tmp/composer-install.php
      chdir=/tmp
      creates=/usr/local/bin/composer

  - name: Move Composer into globally-accessible location
    shell: > 
      mv /tmp/composer.phar /usr/local/bin/composer
      creates=/usr/local/bin/composer

  - name: Check if Drush is installed
    stat:
      path: "{{ drush_path }}"
    register: drush

  - name: Check Drush version
    shell: drush --version | awk '{print $4}' | head -n1
    register: drush_version_check
#    when: drush.stat.exists == true

  - name: Install Drush globally
    get_url:
      url: https://github.com/drush-ops/drush/releases/download/{{ drush_version }}/drush.phar
      dest: "{{ drush_path }}"
#   when: drush.stat.exists == false or drush_version_check.stdout != "{{ drush_version }}"

  - name: Make Drush executable
    file:
      path: "{{ drush_path }}"
      mode: 0755
#    when: drush.stat.exists == true or drush_version_check.stdout != "{{ drush_version }}"

#  - name: Check out drush master branch
#    git: 
#      repo: https://github.com/drush-ops/drush.git
#      dest: /opt/drush

#  - name: Install Drush dependencies with Composer
#    become: yes
#    become_user: vagrant
#    become_method: sudo
#    shell: > 
#      /usr/local/bin/composer install --no-plugins --no-scripts
#      chdir=/opt/drush
#      creates=/opt/drush/vendor/autoload.php

#  - name: Create drush bin symlink
#    file:
#      src: /opt/drush/drush
#      dest: /usr/local/bin/drush
#      mode: 0777
#      state: link
      

  - name: enabled mod_rewrite
    apache2_module:
      name: rewrite
      state: present
    notify:
      - restart apache2

  - name: apache2 listen on port {{ http_port }}
    lineinfile: 
      dest: /etc/apache2/ports.conf 
      regexp: "^Listen " 
      line: Listen {{ http_port }} 
      state: present
    notify:
      - restart apache2

  - name: apache2 virtualhost on port {{ http_port }}
    lineinfile: dest="/etc/apache2/sites-available/000-default.conf" regexp="^<VirtualHost \*:" line="<VirtualHost *:{{ http_port }}>"
    notify:
      - restart apache2

  - name: create virtual host file
    template: 
      src: virtualhost.conf 
      dest: /etc/apache2/sites-available/{{ domain }}.conf
      owner: root
      group: root
      mode: 0644
    notify: restart apache2

  - name: Symlink Drupal virtualhost to sites-enabled
    file: 
      src: "/etc/apache2/sites-available/{{ domain }}.conf" 
      dest: /etc/apache2/sites-enabled/{{ domain }}.conf
      state: link
    notify: restart apache2

  - name: Remove default virtualhost file
    file: 
      path: "/etc/apache2/sites-enabled/000-default.conf" 
      state: absent
    notify: restart apache2


  handlers:
    - name: restart apache2
      service:
        name: apache2
        state: restarted

